<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="movie">

	<!-- 영화 리스트 -->
	<select id="selectMovieList" resultType="hashmap"
		parameterType="hashmap">

		<![CDATA[
		select 
			m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.FILE_NO, f.POSTER_ORGNAME, f.POSTER_SAVNAME, f.DEL_GB
				FROM MC_MOVIE m INNER JOIN MC_MOVIE_FILE f 
					ON m.MOVIE_NO = f.MOVIE_NO 
						WHERE f.DEL_GB = 'N'
							order by m.MOVIE_NAME asc
		]]>
	</select>

	<!-- 영화 중복제거 리스트 -->
	<select id="DupMovieList" resultType="hashmap"
		parameterType="hashmap">
		<![CDATA[
		select m.movie_name, m.movie_type, m.movie_age, f.poster_savname
		from (select * from mc_movie
		where rowid in(select max(rowid) from mc_movie group by movie_name)) m
		inner join mc_movie_file f
		on m.movie_no = f.movie_no
		where f.del_gb = 'N'
		order by m.movie_name asc
		]]>
	</select>

	<!-- 인기 영화 리스트(예매율순) -->
	<select id="HotMovieList" resultType="hashmap"
		parameterType="hashmap">
	<![CDATA[
			select h.movie_no, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
	         m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname, (select count(*) from reservation where movie_no = h.movie_no) as rev_cnt
	      from (select * from (select * from reservation r inner join time t on r.time_no = t.time_no)
	      where rowid in(select max(rowid) from (select * from reservation r inner join time t on r.time_no = t.time_no) group by movie_no)) h
	      inner join mc_movie m on h.movie_no = m.movie_no
	      inner join mc_movie_file f on h.movie_no = f.movie_no
	      where f.del_gb = 'N'
	      order by rev_cnt desc, m.movie_name asc
	]]>
	</select>
	
	<!-- 인기 영화 리스트(예매율순) -->
	<select id="selectHotMovie" resultType="hashmap" parameterType="hashmap">
	<![CDATA[
			select rownum rnum from (select h.movie_no, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
	         m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname, (select count(*) from reservation where movie_no = h.movie_no) as rev_cnt
	      from (select * from (select * from reservation r inner join time t on r.time_no = t.time_no)
	      where rowid in(select max(rowid) from (select * from reservation r inner join time t on r.time_no = t.time_no) group by movie_no)) h
	      inner join mc_movie m on h.movie_no = m.movie_no
	      inner join mc_movie_file f on h.movie_no = f.movie_no
	      where f.del_gb = 'N'
	      order by rev_cnt desc, m.movie_name asc) where movie_no = {#movie_no}
	]]>
	</select>
	
	

	<!-- 최근 개봉 영화 리스트 -->
	<select id="LatelyMovieList" resultType="hashmap"
		parameterType="hashmap">
	<![CDATA[
		select m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname
		from (select * from mc_movie
		where rowid in(select max(rowid) from mc_movie group by movie_name)) m
		inner join mc_movie_file f
		on m.movie_no = f.movie_no
		where f.del_gb = 'N'
		order by m.movie_opendate desc, m.movie_name asc
	]]>
	</select>

	<!-- 개봉 예정 영화 리스트 -->
	<select id="ExpectedMovieList" resultType="hashmap"
		parameterType="hashmap">
	<![CDATA[
		select m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname
		from (select * from mc_movie
		where rowid in(select max(rowid) from mc_movie group by movie_name)) m
		inner join mc_movie_file f
		on m.movie_no = f.movie_no
		where f.del_gb = 'N' and m.movie_opendate >= sysdate
		order by m.movie_opendate asc, m.movie_name asc
	]]>
	</select>
	
	<!-- 평점 순 영화 리스트 -->
	<select id="GradeMovieList" resultType = "hashmap" parameterType = "hashmap">
	<![CDATA[
		select m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname
		from (select * from mc_movie
		where rowid in(select max(rowid) from mc_movie group by movie_name)) m
		inner join mc_movie_file f
		on m.movie_no = f.movie_no
		where f.del_gb = 'N'
		order by m.movie_grade desc, m.movie_name asc
	]]>
	</select>
	
	<!-- 리뷰 개수 순 영화 리스트 -->
	<select id="CommentMovieList" resultType = "hashmap" parameterType = "hashmap">
	<![CDATA[
		select m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.poster_savname, (select count(*) from mc_comment where movie_no = m.movie_no) as total_cmt
		from (select * from mc_movie
		where rowid in(select max(rowid) from mc_movie group by movie_name)) m
		inner join mc_movie_file f on m.movie_no = f.movie_no
		where f.del_gb = 'N'
		order by total_cmt desc, m.movie_name asc
	]]>
	</select>
	
	<!-- 영화 상세 정보 + 포스터 파일 상세 정보 -->
	<select id="selectMovieDetail" resultType="hashmap"
		parameterType="hashmap">

		<![CDATA[
		select 
			m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, m.MOVIE_RUNTIME, m.MOVIE_SUBTITLE, f.FILE_NO, f.POSTER_ORGNAME, f.POSTER_SAVNAME, f.DEL_GB 
				FROM MC_MOVIE m, MC_MOVIE_FILE f
					WHERE m.MOVIE_NO = f.MOVIE_NO
					AND m.MOVIE_NO = #{MOVIE_NO} 
					AND f.DEL_GB = 'N'
								
		]]>
	</select>

	<!-- 영화 스틸컷 파일 상세 정보 -->
 	<select id="selectMovieFileDetail" resultType="hashmap" parameterType="hashmap">

		<![CDATA[
		select 
			m.MOVIE_NO, s.STILLCUT_NO, s.STILLCUT_ORGNAME, s.STILLCUT_SAVNAME, s.DEL_GB
				FROM MC_MOVIE m INNER JOIN STILLCUT s
					ON m.MOVIE_NO = s.MOVIE_NO 
						WHERE m.MOVIE_NO = #{MOVIE_NO} and s.DEL_GB = 'N'
		]]>
	</select>
	
	<!-- 영화 슬라이더 이미지 파일 상세 정보 -->
 	<select id="selectSliderFileDetail" resultType="hashmap" parameterType="hashmap">

		<![CDATA[
		select 
			m.MOVIE_NO, r.SLIDER_NO, r.SLIDER_ORGNAME, r.SLIDER_SAVNAME, r.DEL_GB
				FROM MC_MOVIE m INNER JOIN MC_SLIDER r
					ON m.MOVIE_NO = r.MOVIE_NO 
						WHERE m.MOVIE_NO = #{MOVIE_NO} and r.DEL_GB = 'N'
		]]>
	</select>
	
	<!-- 영화 파일 리스트 -->
	<select id="selectFileList" resultType="hashmap"
		parameterType="hashmap">

		<![CDATA[
        SELECT
            FILE_NO,
            POSTER_ORGNAME,
        FROM
            MC_MOVIE_FILE
        WHERE
            MOVIE_NO = #{MOVIE_NO}
            AND DEL_GB = 'N'
   		 ]]>
	</select>


	<!-- 영화 스틸컷 리스트 -->
	<select parameterType="hashmap" resultType="hashmap"
		id="selectStillCutList">
		<![CDATA[
        SELECT * FROM STILLCUT WHERE MOVIE_NO = #{MOVIE_NO} AND DEL_GB = 'N' ORDER BY STILLCUT_NO DESC
   		 ]]>
	</select>
	
	<!-- 영화 리뷰 코멘트 리스트 -->

	<select id="selectCommentList" resultType="hashmap"
		parameterType="hashmap">
		<![CDATA[
        SELECT * FROM MC_COMMENT WHERE MOVIE_NO = #{MOVIE_NO} AND CMT_DEL = 'N' ORDER BY CMT_REGDATE, CMT_NO
   		 ]]>
	</select>
	
	<!-- 코멘트 페이징 -->
	<select id="selectCommentPagingList" resultType="hashmap" parameterType="hashmap">
		<![CDATA[
		SELECT t.* FROM 
		( SELECT ROWNUM RNUM, c.* FROM MC_COMMENT c WHERE MOVIE_NO = #{MOVIE_NO} ORDER BY CMT_NO DESC) t WHERE RNUM BETWEEN #{START_COUNT} AND #{END_COUNT}
   		 ]]>
	</select>
	

	<select id="selectCommentCount" resultType="hashmap" parameterType="hashmap">
		<![CDATA[
        	SELECT COUNT(*) AS COMMENT_CNT FROM MC_COMMENT WHERE MOVIE_NO = #{MOVIE_NO}
   		 ]]>
	</select>



	<!-- 영화 리뷰 점수 총 합,개수 -->
	<select id = "CommentLikeInfo" parameterType = "hashmap" resultType = "hashmap">
		<![CDATA[
			SELECT SUM(CMT_LIKE) AS ALL_LIKE, COUNT(*) AS CNT FROM MC_COMMENT WHERE MOVIE_NO = #{MOVIE_NO}
		]]>
	</select>

	<!-- 영화 정보 입력 -->
	<insert id="insertMovie" parameterType="hashmap" useGeneratedKeys="true" keyProperty="MOVIE_NO">
		<selectKey keyProperty="MOVIE_NO" resultType="int"
			order="BEFORE">
			select MC_MOVIE_NO_SEQ.NEXTVAL from DUAL
		</selectKey>
		<![CDATA[
		insert into MC_MOVIE 
		( 
			MOVIE_NO, 
			MOVIE_NAME, 
			MOVIE_TYPE, 
		    MOVIE_OPENDATE, 
		    MOVIE_DIRECTOR, 
	        MOVIE_ACTOR, 
	        MOVIE_GENRE, 
	        MOVIE_CONTENT, 
	        MOVIE_GRADE,
		    MOVIE_AGE, 
		    MOVIE_RUNTIME,
		    MOVIE_SUBTITLE
			)
		values 
		(
			#{MOVIE_NO},
			#{MOVIE_NAME},
			#{MOVIE_TYPE},
			#{MOVIE_OPENDATE},
			#{MOVIE_DIRECTOR}, 
			#{MOVIE_ACTOR},
			#{MOVIE_GENRE},
			#{MOVIE_CONTENT},
			'0',
			#{MOVIE_AGE},
			#{MOVIE_RUNTIME},
			#{MOVIE_SUBTITLE}
			)		 		  
		]]>
	</insert>


	<!-- 영화 포스터 업로드 -->
	<insert id="insertFile" parameterType="hashmap">

		<![CDATA[
        INSERT INTO MC_MOVIE_FILE
        (
            FILE_NO,
            MOVIE_NO,
            POSTER_ORGNAME,
            POSTER_SAVNAME
        )
        VALUES
        (
            MC_MOVIE_FILE_NO_SEQ.NEXTVAL,
            #{MOVIE_NO},
            #{POSTER_ORGNAME},
            #{POSTER_SAVNAME}
        )
    	]]>
	</insert>

	<!-- 영화 스틸컷 업로드 -->
	<insert id="insertFile2" parameterType="hashmap">

		<![CDATA[
        INSERT INTO STILLCUT
        (
            STILLCUT_NO,
            MOVIE_NO,
            STILLCUT_ORGNAME,
            STILLCUT_SAVNAME
        )
        VALUES
        (
            STILLCUT_NO_SEQ.NEXTVAL,
            #{MOVIE_NO},
            #{STILLCUT_ORGNAME},
            #{STILLCUT_SAVNAME}
        )
    	]]>
	</insert>
	
	<!-- 영화 메인슬라이더이미지 업로드 -->
	<insert id="insertFile3" parameterType="hashmap">

		<![CDATA[
        INSERT INTO MC_SLIDER
        (
            SLIDER_NO,
            MOVIE_NO,
            SLIDER_ORGNAME,
            SLIDER_SAVNAME
        )
        VALUES
        (
            MC_SLIDER_NO_SEQ.NEXTVAL,
            #{MOVIE_NO},
            #{SLIDER_ORGNAME},
            #{SLIDER_SAVNAME}
        )
    	]]>
	</insert>

	<insert id="insertComment" parameterType="hashmap"> <!-- MC_COMMENT_NO_SEQ -->

		<![CDATA[
        INSERT INTO MC_COMMENT
        (
            CMT_NO,
            MOVIE_NO,
            CMT_ID,
            CMT_CONTENT,
            CMT_REGDATE,
            CMT_LIKE
        )
        VALUES
        (
            MC_COMMENT_NO_SEQ.NEXTVAL,
            #{MOVIE_NO},
            #{CMT_ID},
            #{CMT_CONTENT},
            SYSDATE,
            #{CMT_LIKE}
        )
    	]]>
	</insert>

	<!-- 영화 정보 수정 -->
	<update id="modifyMovie" parameterType="hashMap">

		<![CDATA[
		update MC_MOVIE set 
			MOVIE_NAME = #{MOVIE_NAME}, 
			MOVIE_TYPE = #{MOVIE_TYPE}, 
		    MOVIE_OPENDATE = #{MOVIE_OPENDATE}, 
		    MOVIE_DIRECTOR = #{MOVIE_DIRECTOR}, 
	        MOVIE_ACTOR = #{MOVIE_ACTOR}, 
	        MOVIE_GENRE = #{MOVIE_GENRE}, 
	        MOVIE_CONTENT = #{MOVIE_CONTENT}, 
		    MOVIE_AGE = #{MOVIE_AGE},
		    MOVIE_RUNTIME = #{MOVIE_RUNTIME},
		    MOVIE_SUBTITLE = #{MOVIE_SUBTITLE}
				where MOVIE_NO = #{MOVIE_NO}
		]]>
	</update>

	<!-- 영화 포스터 수정 -->
	<update id="updateFileList" parameterType="hashmap">
    <![CDATA[
        UPDATE MC_MOVIE_FILE SET
            DEL_GB = 'Y'
        WHERE
            MOVIE_NO = #{MOVIE_NO} 
    ]]>
	</update>

	<!-- 영화 스틸컷 수정 -->
	<update id="updateFileList2" parameterType="hashmap">
    <![CDATA[
        UPDATE STILLCUT SET
            DEL_GB = 'Y'
        WHERE
            MOVIE_NO = #{MOVIE_NO} 
    ]]>
	</update>
	
	<!-- 영화 슬라이더 수정 -->
	<update id="updateFileList3" parameterType="hashmap">
    <![CDATA[
        UPDATE MC_SLIDER SET
            DEL_GB = 'Y'
        WHERE
            MOVIE_NO = #{MOVIE_NO} 
    ]]>
	</update>

	<!-- 영화 포스터 수정 -->
	<update id="modifyFile" parameterType="hashmap">
		<![CDATA[
		
		UPDATE MC_MOVIE_FILE SET
            DEL_GB = 'N'
        WHERE
            FILE_NO = #{FILE_NO}  

		]]>
	</update>

	<!-- 영화 스틸컷 수정 -->
	<update id="modifyFile2" parameterType="hashmap">
		<![CDATA[
		UPDATE STILL SET
            DEL_GB = 'N'
        WHERE
            STILLCUT_NO = #{STILLCUT_NO} 
		]]>
	</update>
	
	<!-- 영화 슬라이더 수정 -->
	<update id="modifyFile3" parameterType="hashmap">
		<![CDATA[
		UPDATE MC_SLIDER
            DEL_GB = 'N'
        WHERE
            SLIDER_NO = #{SLIDER_NO} 
		]]>
	</update>
	
	<!-- 영화 평점 수정 -->
	<update id = "modifyGrade" parameterType = "hashmap">
		<![CDATA[
		UPDATE MC_MOVIE SET
			MOVIE_GRADE = #{MOVIE_GRADE}
		WHERE
			MOVIE_NO = #{MOVIE_NO}
		]]>
	</update>

	<!-- 영화 삭제 -->
	<delete id="deleteMovie" parameterType="hashmap">
		<![CDATA[
		delete from MC_MOVIE 
			where MOVIE_NO = #{MOVIE_NO}
		]]>
	</delete>

	<!-- 영화 포스터 삭제 -->
	<delete id="deleteFile" parameterType="hashmap">
		<![CDATA[
		delete form MC_MOVIE_FILE
			where MOVIE_NO = #{MOVIE_NO}
		]]>
	</delete>


	<!-- 영화 스틸컷 삭제 -->
	<delete id="deleteFile2" parameterType="hashmap">
		<![CDATA[
		delete from STILLCUT 
			where MOVIE_NO = #{MOVIE_NO}
		]]>
	</delete>

	<delete id="deleteComment" parameterType="hashmap">

		<![CDATA[
		DELETE FROM MC_COMMENT 
			WHERE CMT_NO = #{CMT_NO}
		]]>
	</delete>
	
	<!--관리자 영화 검색 -->
	<select id="movieSearch" resultType="hashmap" parameterType="hashmap">
		select 
			m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE, m.MOVIE_CONTENT, 
			m.MOVIE_GRADE, m.MOVIE_AGE, f.FILE_NO, f.POSTER_ORGNAME, f.POSTER_SAVNAME, f.DEL_GB
				FROM MC_MOVIE m INNER JOIN MC_MOVIE_FILE f 
					ON m.MOVIE_NO = f.MOVIE_NO 
						WHERE f.DEL_GB = 'N'
							<choose>
								<when test = "MOVIE_NAME != NULL">
									AND m.MOVIE_NAME like '%'||#{MOVIE_NAME}||'%'
								</when>
								<when test = "MOVIE_DIRECTOR != NULL">
									AND m.MOVIE_DIRECTOR like '%'||#{MOVIE_DIRECTOR}||'%'
								</when>
								<when test = "MOVIE_ACTOR != NULL">
									AND m.MOVIE_ACTOR like '%'||#{MOVIE_ACTOR}||'%'
								</when>
							</choose>
							order by m.MOVIE_NO desc
	</select>
	
	<!-- 메인화면 영화검색 -->
	<select parameterType="hashmap" resultType="hashmap" id="MainMovieSearch">
	select m.MOVIE_NO, m.MOVIE_NAME, m.MOVIE_TYPE, m.MOVIE_OPENDATE, m.MOVIE_DIRECTOR, m.MOVIE_ACTOR, m.MOVIE_GENRE,
	m.MOVIE_CONTENT,m.MOVIE_GRADE, m.MOVIE_AGE, f.FILE_NO, f.POSTER_ORGNAME, f.POSTER_SAVNAME, f.DEL_GB
	FROM MC_MOVIE m INNER JOIN MC_MOVIE_FILE f ON m.MOVIE_NO = f.MOVIE_NO
	WHERE f.DEL_GB = 'N' 
	AND m.MOVIE_NAME like '%' || #{searchKeyword} || '%'
	OR m.MOVIE_DIRECTOR like '%' || #{searchKeyword} || '%' 
	OR m.MOVIE_ACTOR like '%' || #{searchKeyword} || '%' 
	OR m.MOVIE_GENRE like '%' || #{searchKeyword} || '%' 
	OR m.MOVIE_CONTENT like '%' || #{searchKeyword} || '%'
	order by m.MOVIE_NO desc 
	</select>
</mapper>